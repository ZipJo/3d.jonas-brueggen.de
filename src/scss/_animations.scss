// _animations.scss

@use "sass:math";
@use 'variables';
@use 'functions';

// main perspective animations
.wrapper {
	$homeHeight: 170px; // logo-height+nav-height

	$animationDurationHome: .8s;

	header {
		will-change: transform, margin-top;
		margin-top: 50vh;
		transform: translateY(-50%);
		transition: margin-top $animationDurationHome ease-in-out, transform $animationDurationHome ease-in-out;

		.header_logo {
			will-change: transform;
			transform: rotateY(360deg);
			transition: transform $animationDurationHome ease-in-out;
		}
		.logo_subtext {
			will-change: opacity, visibility, transform;
			opacity: 1;
			visibility: visible;
			transition: all $animationDurationHome*.7 ease-in-out $animationDurationHome*.3;
		}
		nav {
			will-change: opacity, visibility;
			opacity: 0;
			visibility: hidden;
			transition: all $animationDurationHome*.7 ease-in-out 0s;

			a {
				position: relative;
				
				&:before {
					content:"";
					position: absolute;
					bottom: 0;
					right: 0;
					height: 1px;
					width: 0;
					background: variables.$color-accent-6;
					transition: width 0.15s ease-in-out;
				}

				&:hover:before{
					background: variables.$color-page-main;
					left: 0;
					width: 100%;
					transition: width 0.15s ease-in-out;
				}
			}

			&.projects a:nth-child(1):before,
			&.about a:nth-child(2):before {
				left: 0;
				width: 100%;
				transition: width 0.15s ease-in-out;
			}

		}

		@keyframes enter--animation {
			50% { transform: translateX(-50%) scale(1.05); }
		}

		.enter {
			will-change: transform, opacity;
			opacity: 0;
			animation-name: enter--animation;
			animation-iteration-count: infinite;
			animation-duration: 3s;
			animation-timing-function: ease-in-out;
			transition: opacity $animationDurationHome/2 ease-in-out;
			visibility: hidden;

			circle {
				will-change: transform, stroke-dashoffset;
				stroke-dashoffset: 1300;
				transform: rotate(90deg);
				transform-origin: center;
				transition: transform 1s ease-in-out .5s, stroke-dashoffset 1.3s ease-in-out .2s;
			}

			&.visible {
				visibility: visible;
				opacity: 1;
				transition: opacity 1s ease-in-out;

				circle {
					stroke-dashoffset: 0;
					transform: rotate(270deg);
				}
			}
		}


		&.top {
			margin-top: 0;
			transform: translateY(0);

			.header_logo { transform: rotateY(0); }
			.logo_subtext { opacity: 0;	visibility: hidden; transition: all $animationDurationHome*.7 ease-in-out 0s; }
			nav { opacity: 1; visibility: visible; transition: all $animationDurationHome*.7 ease-in-out $animationDurationHome*.3; }
		}
	}

	@keyframes section-fromHome--animation {
		0% {
			opacity: 0;
		}
		100% {
			opacity: 1;
		}
	}
	@keyframes section-toHome--animation {
		0% {
			opacity: 1;
		}
		100% {
			opacity: 0;
		}
	}

	section {
		pointer-events: none;
		opacity: 0;

		transition: opacity .5s ease-in-out;

		&.active {
			pointer-events: all;
			opacity: 1;
		}

		&.toHome {
			opacity: 0;
		}
	}

	section.projects {
		&.projectsToAbout {
			opacity: 1;
		}
		&.aboutToProjects {
			opacity: 1;
		}
	}
	section.about {
		&.projectsToAbout {
			opacity: 1;
		}
		&.aboutToProjects {
			opacity: 1;
		}		
	}


	// section specific animations

	section.projects {
		&.active .project {
			transform: translateX(0) translateZ(0);
			transition-property: transform;
			transition-duration: .9s;
			transition-timing-function: ease-in-out;
			@for $i from 1 through 10 {
				&:nth-child(#{$i}) { transition-delay: calc(0s + (.1s * #{$i})); }
			}
		}

		.project {
			transform: translateX(-100%) translateZ(0);
			transition-property: transform;
			transition-duration: 1s;
			transition-timing-function: ease-in-out;
			@for $i from 1 through 10 {
				&:nth-child(#{$i}) { transition-delay: calc(0s + (.03s * #{$i})); }
			}
		}

		.project {

			$move_dur: 60s;
			$move_dur_mod: 5s;

			@for $i from 1 through 10 {
				&:nth-child(#{$i}) .cover {
					animation-delay: calc( -#{($move_dur + $move_dur_mod) * 2} * var(--rnd-1) );
					animation-duration: calc( #{$move_dur} + ( #{$move_dur_mod} * var(--rnd-2) ) );
				}
			}

			.cover {
				transform-style: preserve-3d;
				will-change: transform;
				
				animation-name: cover-move--animation;
				animation-iteration-count: infinite;
				animation-direction: alternate;
				animation-timing-function: cubic-bezier(.25,0,.75,1);
				
				@keyframes cover-move--animation {
					from { transform: translateX(0) translateZ(0) rotate(0.01deg); }
					to   { transform: translateX(-30%) translateZ(0) rotate(0.01deg); }
				}

				&.active {
					transition: transform .4s cubic-bezier(.4,0,.35,1.35);
				}

				$arrow_indent: 18px;
				--logo-width: 145px;
				@include functions.mq(small) { --logo-width: 93px; }

				// Order is important here. First animation, then the basestyle, so the hover gets
				// overwritten, if fromActive is applied. This is because of css-specifity:       
				// ".fromActive:before" and ":hover:before" both have a (base)-specifity of 0/2/0 
				
				&:hover:before, &.active:before {
					$width: 0%;
					clip-path: polygon(0% 0%, $width 0%, $width calc(50% - #{$arrow_indent}), calc(#{$width} - #{$arrow_indent})  50%, $width calc(50% + #{$arrow_indent}), $width 100%, 0% 100%);
					transition: clip-path .6s cubic-bezier(.4,-0.1,.35,1.35), opacity .3s ease-in-out .2s;
					opacity: 0;
				}

				&:before, &.fromActive:before {
					will-change: clip-path, opacity;
					content:'';
					height: 100%;
					width: 100%;
					position: absolute;
					left: 0;

					$width: calc(100% - var(--logo-width) - 1px);
					clip-path: polygon(0% 0%, $width 0%, $width calc(50% - #{$arrow_indent}), calc(#{$width} - #{$arrow_indent})  50%, $width calc(50% + #{$arrow_indent}), $width 100%, 0% 100%);
					transition: clip-path .6s cubic-bezier(.4,0,.60,1.25), opacity .3s ease-in-out .1s;
					opacity: 1;

				}

			}

			.details {
				will-change: max-height, padding;
				max-height: 0;
				overflow-y: hidden;
				transition: max-height .4s ease-in-out, padding .4s ease-in-out;

				.btn {
					will-change: opacity;
					opacity: 0;
					transition: opacity .2s ease-in-out;
				
					&:before, &:after {
						content:'';
						position: absolute;
						z-index: -1;
						height: 50%;
						width: 0%;
						background: var(--accent-color);
						right: 0;
						transition-property: width;
						transition-duration: .25s;
						transition-timing-function: ease-in-out;
					}
					&:before {
						top:0;
						transition-delay: 0;
					}
					&:after {
						bottom:0;
						transition-delay: .08s;
					}
					&:hover:before, &:hover:after {
						width: 100%;
						left: 0;
					}
				}
			}

			.cover.active ~ .details {
				transition: max-height .3s ease-in-out .15s, padding .3s ease-in-out .15s;
				
				.btn {
					transition: opacity .2s ease-in-out .4s;
					opacity: 1;
				}
			}
		}
	}




	section.about {


		// contact_tiles animation
		.contact_tiles_grid {
			a:nth-child(1) { animation-delay: 0s; }
			a:nth-child(2) { animation-delay: .1s; }
			a:nth-child(3) { animation-delay: .2s; }
			a:nth-child(4) { animation-delay: .3s; }
			
			&.start_animation a {
				animation-name: contact_tiles--animation;
				animation-duration: .8s;
				animation-timing-function: ease-out;
				animation-iteration-count: 1;
			}

			a {
				will-change: background-color;
				transition: background-color .2s ease-in-out;
				background-color: transparent;
				// mail
				&:nth-child(1) {
					&:hover, &:active, &:focus { background-color: #dd4c3c; }
				}
				// phone
				&:nth-child(2) {
					&:hover, &:active, &:focus { background-color: #3d559e; }
				}
				// skype
				&:nth-child(3) {
					&:hover, &:active, &:focus { background-color: #1dabe5; }
				}
				// whatsapp
				&:nth-child(4) {
					&:hover, &:active, &:focus { background-color: #20d442; }
				}
			}
		}

		@keyframes contact_tiles--animation {
			from { transform: translateX(0%) translateZ(0); }
			30% { transform: translateX(-20%) translateZ(0); }
			to { transform: translateX(0%) translateZ(0); }
		}
	}
}




// everything popup-related

.popup_container {
	will-change: opacity;
	transition: opacity .2s;
	z-index: 1000;

	&.active {
		opacity: 1;
		pointer-events: all;
	}

	> div {
		will-change: transform, opacity;
		transform: translateY(-60px);
		opacity: 0;
		transition: all .3s ease-in-out;
		
		&.move {
			transform: translateY(0);
			opacity: 1;
		}
	}

	// project/pictures

	.pictures {
		width: 200px;
		transition: width .3s ease-in-out;

		&.loaded.image_pc {
			width: 1100px;
		}
		&.loaded.image_phone {
			width: 300px;
		}
		img {
			opacity: 0;
			transition: opacity .3s ease-in-out .1s;
		}
		&.loaded img {
			opacity: 1;
		}

		span.loader {
			opacity: 1;
			transition: opacity .2s;
		}

		 &.loaded span.loader {
			opacity: 0;	
		}

		&.loaded > a:hover ~ p a.pagelink:before {
			left: 0;
			width: 100%;
			transition: width 0.15s ease-in-out;
		}
		
		p {
			a {
				position: relative;
				
				&:before {
					content:"";
					position: absolute;
					bottom: 0;
					right: 0;
					height: 2px;
					width: 0;
					background: variables.$color-page-main;
					transition: width 0.15s ease-in-out;
				}

				&:hover:before{
					left: 0;
					width: 100%;
					transition: width 0.15s ease-in-out;
				}
			}
		}
	}

	//imprint

	.impressum_div {
		+ span.close_info {
			opacity: 0.95;

			&.fade {
				opacity: .15;
				transition: opacity 1s ease-in-out;
			}

			&:hover {
				opacity: 1;
				transition: opacity .2s ease-in-out;
			}

		}
	}
}